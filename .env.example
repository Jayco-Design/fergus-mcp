# Fergus API Configuration
# Get your Personal Access Token from your Fergus account settings

# Your Fergus Personal Access Token (required)
FERGUS_API_TOKEN=your_fergus_api_token_here

# Base URL for Fergus API (optional, defaults to https://api.fergus.com)
# FERGUS_BASE_URL=https://api.fergus.com

# HTTP Server Configuration (for remote MCP server)
# Port for HTTP server (default: 3100)
# Note: Port 3000 may conflict with OrbStack
# HTTP_PORT=3100

# Host to bind to (default: 0.0.0.0 - all interfaces)
# HTTP_HOST=0.0.0.0

# Public URL for the server (used for OAuth redirects, required for ngrok/production)
# For local development: http://localhost:3100
# For ngrok: https://your-subdomain.ngrok-free.dev
# PUBLIC_URL=http://localhost:3100

# Allowed origins for CORS (comma-separated, default: *)
# ALLOWED_ORIGINS=https://claude.ai,https://www.claude.ai

# Allowed hosts for DNS rebinding protection (comma-separated, default: 127.0.0.1,localhost)
# ALLOWED_HOSTS=localhost,127.0.0.1

# Enable DNS rebinding protection (default: true)
# ENABLE_DNS_REBINDING_PROTECTION=true

# Cognito OAuth Configuration (for remote HTTP server with OAuth)
# Cognito User Pool ID
COGNITO_USER_POOL_ID=us-east-1-foo

# Cognito App Client ID (obtain from AWS Cognito console)
COGNITO_CLIENT_ID=your_client_id_here

# Cognito App Client Secret (obtain from AWS Cognito console)
COGNITO_CLIENT_SECRET=your_client_secret_here

# AWS Region for Cognito
COGNITO_REGION=us-east-1

# Cognito Domain (auth.fergus.com)
COGNITO_DOMAIN=auth.fergus.com

# OAuth Redirect URI (must match Cognito app client configuration)
# This is where Cognito redirects back to OUR server after user authorizes
# We then redirect to Claude with our session token
# IMPORTANT: You must configure this URL in your Cognito app client allowed callback URLs
# For ngrok: https://your-subdomain.ngrok-free.dev/oauth/callback
OAUTH_REDIRECT_URI=https://your-site/oauth/callback

# OAuth scopes (space-separated)
# OAUTH_SCOPES=openid email profile

# Session Configuration
# Session timeout in milliseconds (default: 3600000 = 1 hour)
# SESSION_TIMEOUT_MS=3600000

# Session storage backend: memory or redis (default: memory)
# SESSION_STORAGE=memory

# Redis URL (only required if SESSION_STORAGE=redis)
# REDIS_URL=redis://localhost:6379
